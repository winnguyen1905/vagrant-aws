# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "eurolinux-vagrant/centos-stream-9"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "192.168.56.22"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Disable the default share of the current code directory. Doing this
  # provides improved isolation between the vagrant box and your host
  # by making sure your Vagrantfile isn't accessible to the vagrant box.
  # If you use this you may want to enable additional shared subfolders as
  # shown above.
  # config.vm.synced_folder ".", "/vagrant", disabled: true

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    # vb.gui = true

    # Customize the amount of memory on the VM:
    vb.memory = "1024"
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
     yum install wget httpd tar unzip zip -y
     yum install php php-mysqlnd php-fpm php-xml php-gd php-mbstring php-json php-intl php-zip -y

    # set up webserver
    systemctl start httpd
    systemctl enable httpd
    mkdir -p /tmp/finance
    cd /tmp/finance  
    wget https://www.tooplate.com/zip-templates/2135_mini_finance.zip
    unzip -o 2135_mini_finance.zip 
    cp -r 2135_mini_finance/* /var/www/html/
    systemctl restart httpd
    cd /tmp/
    rm -rf /tmp/finance

    # Set up DB
    mkdir -p /srv/www
    chown -R apache: /srv/www
    chmod 2775 /srv/www
    wget https://wordpress.org/latest.tar.gz | -u apache:2905 tar -xvzf -C /srv/www
    mkdir /etc/apache2/site-available/
    cd /etc/apache2/site-available/
    touch wordpress.conf
    cat <<EOT >> wordpress.conf
<VirtualHost *:80>
    DocumentRoot /srv/www/wordpress
    <Directory /srv/www/wordpress>
        Options FollowSymLinks
        Require all granted
    </Directory>
</VirtualHost>
EOT
    a2ensite wordpress
    a2enmod rewrite
    a2dissite 000-default
    systemctl restart apache2

    if ! command -v mysql >/dev/null; then
      rpm -Uvh https://repo.mysql.com/mysql80-community-release-el7-11.noarch.rpm
      yum install -y mysql-community-server
      systemctl enable mysqld
      systemctl start mysqld
    fi

    # Set MySQL root password (only first time)
    ROOT_PW="2905"
    if ! mysql -u root -p$ROOT_PW -e ";" 2>/dev/null; then
      TEMP_PW=$(grep 'temporary password' /var/log/mysqld.log | awk '{print $NF}')
      mysql --connect-expired-password -u root -p"$TEMP_PW" \
        -e "ALTER USER 'root'@'localhost' IDENTIFIED BY '$ROOT_PW'; FLUSH PRIVILEGES;"
    fi

    # Run WordPress SQL script
    mysql -u root -p$ROOT_PW < /vagrant/wordpress.sql
    # Install and configure WordPress


  SHELL
end